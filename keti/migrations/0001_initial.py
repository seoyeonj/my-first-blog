# -*- coding: utf-8 -*-
# Generated by Django 1.11.4 on 2017-08-22 03:12
from __future__ import unicode_literals

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AiriotTable',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='userID', max_length=100)),
                ('device', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=200)),
                ('time', models.CharField(max_length=100)),
                ('voc_volts', models.IntegerField()),
                ('co2_volts', models.IntegerField()),
                ('gas_volts', models.IntegerField()),
                ('pm25', models.IntegerField()),
                ('pm10', models.IntegerField()),
                ('pm01', models.IntegerField()),
            ],
            options={
                'db_table': 'AirIoT_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AirqualityTable',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('so2', models.FloatField()),
                ('co', models.FloatField()),
                ('o3', models.FloatField()),
                ('no2', models.FloatField()),
                ('pm10', models.FloatField()),
                ('pm25', models.FloatField()),
            ],
            options={
                'db_table': 'airquality_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroup',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=80, unique=True)),
            ],
            options={
                'db_table': 'auth_group',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthGroupPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_group_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthPermission',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=255)),
                ('codename', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'auth_permission',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128)),
                ('last_login', models.DateTimeField(blank=True, null=True)),
                ('is_superuser', models.IntegerField()),
                ('username', models.CharField(max_length=150, unique=True)),
                ('first_name', models.CharField(max_length=30)),
                ('last_name', models.CharField(max_length=30)),
                ('email', models.CharField(max_length=254)),
                ('is_staff', models.IntegerField()),
                ('is_active', models.IntegerField()),
                ('date_joined', models.DateTimeField()),
            ],
            options={
                'db_table': 'auth_user',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserGroups',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_groups',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='AuthUserUserPermissions',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
            options={
                'db_table': 'auth_user_user_permissions',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoAdminLog',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action_time', models.DateTimeField()),
                ('object_id', models.TextField(blank=True, null=True)),
                ('object_repr', models.CharField(max_length=200)),
                ('action_flag', models.SmallIntegerField()),
                ('change_message', models.TextField()),
            ],
            options={
                'db_table': 'django_admin_log',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoContentType',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app_label', models.CharField(max_length=100)),
                ('model', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'django_content_type',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoMigrations',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('app', models.CharField(max_length=255)),
                ('name', models.CharField(max_length=255)),
                ('applied', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_migrations',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='DjangoSession',
            fields=[
                ('session_key', models.CharField(max_length=40, primary_key=True, serialize=False)),
                ('session_data', models.TextField()),
                ('expire_date', models.DateTimeField()),
            ],
            options={
                'db_table': 'django_session',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='SmartthingsTable',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='UserID', max_length=100)),
                ('device', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('device_name', models.CharField(max_length=100)),
                ('device_type', models.CharField(max_length=100)),
                ('device_value', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'smartthings_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='UvTable',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('uvindex', models.IntegerField()),
            ],
            options={
                'db_table': 'uv_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WayskinTable',
            fields=[
                ('index', models.AutoField(db_column='Index', primary_key=True, serialize=False)),
                ('userid', models.CharField(db_column='userID', max_length=100)),
                ('device', models.CharField(max_length=100)),
                ('location', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('skin_moisture', models.IntegerField()),
                ('part', models.CharField(max_length=100)),
                ('m_char', models.CharField(max_length=100)),
            ],
            options={
                'db_table': 'wayskin_table',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='WeatherTable',
            fields=[
                ('index', models.AutoField(primary_key=True, serialize=False)),
                ('location', models.CharField(max_length=100)),
                ('day', models.CharField(max_length=100)),
                ('time', models.CharField(max_length=100)),
                ('wind_wdir', models.IntegerField()),
                ('wind_wspd', models.IntegerField()),
                ('precipitation', models.IntegerField()),
                ('sky', models.CharField(max_length=100)),
                ('temperature', models.IntegerField()),
                ('humidity', models.IntegerField()),
            ],
            options={
                'db_table': 'weather_table',
                'managed': False,
            },
        ),
    ]
